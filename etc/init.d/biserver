#! /bin/bash
# biserver-ee   Bring up/down Pentaho Business Intelligence server
# chkconfig: 345 85 10
# description: Pentaho Business Intelligence server start at boot time.
#
#
### BEGIN INIT INFO
# Provides: biserver-ee
# Required-Start $network $syslog $mysqld
# Required-Stop $network $syslog
# Default-Start:
# Default-Stop:
# Description: Pentaho Business Intelligence server start at boot time.
# Short-Description: start and stop biserver
### END INIT INFO 

# Source function library.
[ -f /etc/sysconfig/network ] || exit 0
. /etc/rc.d/init.d/functions
. /etc/sysconfig/network

# Check that networking is up.
[ "${NETWORKING}" = "no" ] && exit 0

SU=/bin/su

#set environment variables
NAME=biserver
FULLNAME="Pentaho Business Intelligence"
PENTAHOBI_HOME=/opt/pentaho/biserver
PENTAHOBI_USR=pentaho
PENTAHOBI_GRP=pentaho
export PENTAHO_JAVA_HOME=/usr/lib/jvm/java-1.5.0-gcj-1.5.0.0


getpid() {
    PID=$(ps aux | grep $NAME | grep java | grep -v grep | awk '{print $2}')
    echo $PID
}

start() {
    if [ $(getpid)"x" == "x" ]; then
        pushd $PENTAHOBI_HOME > /dev/null
        action $"Starting Pentaho Business Intelligence server" $SU -m $PENTAHOBI_USR -c "$PENTAHOBI_HOME/start-pentaho.sh >> $PENTAHOBI_HOME/tomcat/logs/startup.log"
        popd $PENTAHOBI_HOME > /dev/null
    else
        action $"Starting Pentaho Business Intelligence server" /bin/false
    fi
}

stop() {
    if [ $(getpid)"x" != "x" ]; then
        pushd $PENTAHOBI_HOME > /dev/null
        CURRPID=$(getpid)
        action $"Stopping Pentaho Business Intelligence server" $SU -m $PENTAHOBI_USR -c "kill -9 $CURRPID"
        popd $PENTAHOBI_HOME > /dev/null
    else
        action $"Stopping Pentaho Business Intelligence server" /bin/false
    fi
}

restart() {
    stop
    echo "Waiting for the process to stop"
    while [ $(getpid)"x" != "x" ]; do
        sleep 1
        echo -n .
    done
    echo
    start
}

status() {
    PID=$(getpid)
    if [ $PID"x" == "x" ]; then
        echo "$FULLNAME($NAME) is stopped"
    else
        echo "$FULLNAME($NAME) is started with pid $PID"
    fi
}


case "$1" in
    start)
        start
        ;;
    stop)
        stop
        ;;
    status)
        status
        ;;
    restart)
        restart
        ;;
    *)
        echo $"Usage: $0 {start|stop|status|restart}"
        exit 1
esac

exit 0
